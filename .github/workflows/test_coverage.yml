name: Coverage

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GH_TOKEN }}
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'
        token: ${{ secrets.GH_TOKEN }}

    - name: Get Current Branch Name
      run: |
        CURRENT_BRANCH=${{ github.ref }}
        echo "Current branch: $CURRENT_BRANCH"
        id: current_branch
  

    # - name: UpDocker
    #   run: docker-compose up -d
   
    # - name: Build 
    #   run: go build -v

    # - name: Main Test
    #   run: | 
    #     git config user.name github-actions
    #     git config user.email github-actions@github.com
    #     git fetch
    #     git checkout main -f

    #     GIN_MODE=release go test -race -v -coverpkg=./controllers >> coverage-out.txt

    # - name: Main Coverage
    #   run: |
    #     PENULTIMA_LINHA=$(tac coverage-out.txt | sed -n 2p)
    #     MAINCOV=$(echo "$PENULTIMA_LINHA" | grep -oE '[0-9]+\.?[0-9]*')
    #     COLOR=orange
    #     if (( $(echo "$MAINCOV <= 50" | bc -l) )); then
    #       COLOR=red
    #     elif (( $(echo "$MAINCOV > 80" | bc -l) )); then
    #       COLOR=green
    #     fi

    # - name: Branch Test
    #   run: GIN_MODE=release go test -race -v -coverpkg=./controllers >> coverage-out.txt
  
    # - name: Branch Coverage
    #   run: |
    #     PENULTIMA_LINHA=$(tac coverage-out.txt | sed -n 2p)
    #     COVERAGE=$(echo "$PENULTIMA_LINHA" | grep -oE '[0-9]+\.?[0-9]*')
    #     COLOR=orange
    #     if (( $(echo "$BRANCHCOV <= 50" | bc -l) )); then
    #       COLOR=red
    #     elif (( $(echo "$BRANCHCOV > 80" | bc -l) )); then
    #       COLOR=green
    #     fi
    #     git config user.name github-actions
    #     git config user.email github-actions@github.com
    #     git fetch
    #     git checkout badge -f
    #     curl "https://img.shields.io/badge/coverage-$BRANCHCOV%25-$COLOR" > badge.svg
    #     git add badge.svg
    #     git commit -m "change badge" || true
    #     git push origin badge
